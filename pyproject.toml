[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "vllm_blender"
version = "0.1.0"
description = "An LLM project using VLLM and BlenderNet to generate 3D Assets for Three.JS development"
readme = "README.md"
license = "MIT"
authors = [{ name = "Eren Cetin", email = "erencetin98@gmail.com" }]
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
]
dependencies = []

[project.urls]
Homepage = "https://github.com/erenovic/vllm_blender"
Repository = "https://github.com/erenovic/vllm_blender.git"
Issues = "https://github.com/erenovic/vllm_blender/issues"

[project.optional-dependencies]
dev = [
    "ruff>=0.6.0",
    "mypy>=1.10.0",
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "pytest-xdist>=3.5.0",  # parallel test execution
    "pre-commit>=3.6.0",
    "hypothesis>=6.0.0",     # property-based testing
]

[tool.pytest.ini_options]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=vllm_blender",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
[tool.ruff]
line-length = 88
target-version = "py311"
src = ["vllm_blender", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C90", # mccabe complexity
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long, handled by formatter
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101"]  # Use of assert detected
[tool.mypy]
python_version = "3.11"
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.coverage.run]
source = ["vllm_blender"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]